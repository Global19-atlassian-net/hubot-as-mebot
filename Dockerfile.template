# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
FROM resin/%%RESIN_MACHINE_NAME%%-debian

# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.
#RUN apt-get update && apt-get install -yq \
#    alsa-utils libasound2-dev && \
#    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN apt-get update && apt-get install -y \
    make curl npm g++ && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN npm install -g npm && npm install -g npm && npm install -g n && \
    npm cache clean && rm -rf /tmp/* && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN n 6.9.2

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package.json package.json

# This install npm dependencies on the resin.io build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm cache clean && rm -rf /tmp/*

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable systemd init system in container
ENV INITSYSTEM on
ENV NODE_ENV production
ENV HUBOT_FLOWDOCK_LISTEN_TO_SELF 1
ENV HUBOT_IGNORE_PREFIX :
ENV HUBOT_GITTER_ROOM resin-io/chat
# public/chat flow
ENV HUBOT_MONITOR_ROOM 3febc696-3aaf-4a83-9ddd-3a267abf4212

# server.js will run when container starts up on the device
CMD ["npm", "start"]
